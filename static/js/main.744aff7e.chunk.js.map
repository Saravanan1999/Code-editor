{"version":3,"sources":["web-based/Editor.js","web-based/hooks/useLocalStorage.js","web-based/web.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","Web","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","id","size","option","con","selector","document","getElementById","querySelectorAll","style","display","handleLangChange","selected","title","sandbox","frameBorder","width","height","ReactDOM","render"],"mappings":"kRAWe,SAASA,EAAOC,GAAQ,IAEnCC,EAIED,EAJFC,SACAC,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,MACAC,EACEJ,EADFI,SALkC,EAOZC,oBAAS,GAPG,mBAO7BC,EAP6B,KAOvBC,EAPuB,KAapC,OACE,yBAAKC,UAAS,2BAAsBF,EAAO,GAAK,cAC9C,yBAAKE,UAAU,gBACZN,EACD,4BAAQO,KAAK,SAASD,UAAU,sBAAsBE,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,OAC5F,kBAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,QAG9C,kBAAC,aAAD,CACEC,eAbN,SAAsBC,EAAQC,EAAMd,GAClCC,EAASD,IAaLA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMpB,EACNqB,MAAO,WACPC,aAAa,MCrCR,SAASC,EAAgBC,EAAKC,GAC3C,IAAMC,EAHO,iBAGgBF,EAD4B,EAG/BpB,oBAAS,WACjC,IAAMuB,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACFA,IAEAA,KAV8C,mBAGlDvB,EAHkD,KAG3C8B,EAH2C,KAkBzD,OAJAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MAChD,CAACwB,EAAaxB,IAEV,CAACA,EAAO8B,GCsFFI,MA1Ef,WAAgB,IAAD,EACWb,EAAgB,OAAQ,IADnC,mBACNc,EADM,KACAC,EADA,OAESf,EAAgB,MAAO,IAFhC,mBAENgB,EAFM,KAEDC,EAFC,OAGOjB,EAAgB,KAAM,IAH7B,mBAGNkB,EAHM,KAGFC,EAHE,OAIetC,mBAAS,IAJxB,mBAINuC,EAJM,KAIEC,EAJF,KAoBb,OAdAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,qCAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,0CAOR,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGf,oCACA,yBAAKO,GAAG,UACJ,4CAEJ,yBAAKzC,UAAU,iBAEb,yBAAKA,UAAU,SACX,6CACA,4BAAQyC,GAAG,WAAWC,KAAK,IAAI9C,SAAU,SAAA+C,GAAM,OA5DhC,WACrB,IAiBMC,EAjBFC,EAAWC,SAASC,eAAe,YAClB,QAAlBF,EAASlD,SACLiD,EAAME,SAASE,iBAAiB,sBAChC,GAAGC,MAAMC,QAAQ,QACrBN,EAAI,GAAGK,MAAMC,QAAU,OACvBN,EAAI,GAAGK,MAAMC,QAAU,QAGL,OAAlBL,EAASlD,SACNiD,EAAME,SAASE,iBAAiB,sBAC/B,GAAGC,MAAMC,QAAQ,OACrBN,EAAI,GAAGK,MAAMC,QAAU,QACvBN,EAAI,GAAGK,MAAMC,QAAU,QAIL,MAAlBL,EAASlD,SACNiD,EAAME,SAASE,iBAAiB,sBAC/B,GAAGC,MAAMC,QAAQ,OACtBN,EAAI,GAAGK,MAAMC,QAAU,OACtBN,EAAI,GAAGK,MAAMC,QAAU,SAuC+BC,KACjD,4BAAQxD,MAAM,OAAOyD,UAAQ,GAA7B,cACA,4BAAQzD,MAAM,OAAd,aACA,4BAAQA,MAAM,MAAd,cAIN,kBAACJ,EAAD,CACEE,SAAU,MACVC,YAAY,aACZC,MAAOmC,EACP9B,UAAY,OACZyC,GAAG,OACH7C,SAAUmC,IAEZ,kBAACxC,EAAD,CACEE,SAAS,MACTC,YAAY,YACZC,MAAOqC,EACPS,GAAK,MACL7C,SAAUqC,IAEZ,kBAAC1C,EAAD,CACEE,SAAS,aACTC,YAAY,WACZC,MAAOuC,EACPO,GAAK,KACL7C,SAAUuC,KAId,yBAAKnC,UAAU,QACb,4BACEoC,OAAQA,EACRiB,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,Y,MCjGbC,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASC,eAAe,U","file":"static/js/main.744aff7e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\nexport default function Editor(props) {\r\n  const {\r\n    language,\r\n    displayName,\r\n    value,\r\n    onChange\r\n  } = props\r\n  const [open, setOpen] = useState(true)\r\n\r\n  function handleChange(editor, data, value) {\r\n    onChange(value)\r\n  }\r\n\r\n  return (\r\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n      <div className=\"editor-title\">\r\n        {displayName}\r\n        <button type=\"button\" className=\"expand-collapse-btn\" onClick={() => setOpen(prevOpen => !prevOpen)}>\r\n      <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n        </button>\r\n      </div>\r\n      <ControlledEditor\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"code-mirror-wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: 'material',\r\n          lineNumbers: false\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}\r\n","import React , { useState, useEffect } from \"react\";\r\nimport Editor from './Editor'\r\nimport useLocalStorage from './hooks/useLocalStorage'\r\nconst handleLangChange=()=> {\r\n  var selector = document.getElementById(\"filename\");\r\n  if(selector.value == \"HTML\"){\r\n     var con = document.querySelectorAll(\".editor-container\"); \r\n     con[0].style.display=\"block\";\r\n     con[1].style.display = \"none\";\r\n     con[2].style.display = \"none\";\r\n    \r\n  }\r\n  if(selector.value == \"CSS\"){\r\n    var con = document.querySelectorAll(\".editor-container\"); \r\n     con[0].style.display=\"none\";\r\n     con[1].style.display = \"block\";\r\n     con[2].style.display = \"none\";\r\n     \r\n     \r\n  }\r\n  if(selector.value == \"JS\"){\r\n    var con = document.querySelectorAll(\".editor-container\"); \r\n     con[0].style.display=\"none\";\r\n    con[1].style.display = \"none\";\r\n     con[2].style.display = \"block\";\r\n    \r\n  }\r\n}\r\nconst options = [\r\n  { value: \"HTML\", label: \"index.html\" },\r\n  { value: \"CSS\", label: \"index.css\" },\r\n  { value: \"JS\", label: \"index.js\" }\r\n  \r\n];\r\nfunction Web() {\r\n  const [html, setHtml] = useLocalStorage('html', '')\r\n  const [css, setCss] = useLocalStorage('css', '')\r\n  const [js, setJs] = useLocalStorage('js', '')\r\n  const [srcDoc, setSrcDoc] = useState('')\r\n  \r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setSrcDoc(`\r\n        <html>\r\n          <body>${html}</body>\r\n          <style>${css}</style>\r\n          <script>${js}</script>\r\n        </html>\r\n      `)\r\n    }, 250)\r\n\r\n    return () => clearTimeout(timeout)\r\n  }, [html, css, js])\r\n\r\n  return ( \r\n  <>\r\n  <div id=\"header\">\r\n      <h2>Code Editor</h2>\r\n  </div>\r\n  <div className=\"pane top-pane\">\r\n    \r\n    <div className=\"panes\" >\r\n        <h3>File Explorer</h3>\r\n        <select id=\"filename\" size=\"3\" onChange={option => handleLangChange()}>\r\n          <option value=\"HTML\" selected>index.html</option>\r\n          <option value=\"CSS\">index.css</option>\r\n          <option value=\"JS\">index.js</option>\r\n           \r\n        </select> \r\n    </div>\r\n    <Editor\r\n      language= \"xml\"\r\n      displayName=\"index.html\"\r\n      value={html}\r\n      className = \"html\"\r\n      id=\"HTML\"\r\n      onChange={setHtml}\r\n    />\r\n    <Editor\r\n      language=\"css\"\r\n      displayName=\"index.css\"\r\n      value={css}\r\n      id = \"CSS\"\r\n      onChange={setCss}\r\n    />\r\n    <Editor\r\n      language=\"javascript\"\r\n      displayName=\"index.js\"\r\n      value={js}\r\n      id = \"JS\"\r\n      onChange={setJs}\r\n    />\r\n    \r\n  </div>\r\n  <div className=\"pane\">\r\n    <iframe\r\n      srcDoc={srcDoc}\r\n      title=\"output\"\r\n      sandbox=\"allow-scripts\"\r\n      frameBorder=\"0\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n    />\r\n  </div>\r\n</>\r\n  )\r\n}\r\n\r\nexport default Web;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Web from \"./web-based/web\";\r\nimport \"./web-based/index.css\";\r\nReactDOM.render(<Web />, document.getElementById(\"web\"));\r\n"],"sourceRoot":""}